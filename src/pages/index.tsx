import Head from "next/head";
import { useEffect, useState } from "react";
import { useToast } from "@chakra-ui/react";
import { Button } from "@chakra-ui/react";

interface Question {
  question: string;
  options: string[];
  answer: number;
}

const questions: Question[] = [
  {
    question: "What is something you write and leave behind before you die?",
    options: ["Essay", "Will", "Hate Speech", "Poem"],
    answer: 1,
  },
  {
    question:
      "What was the first letter of the crepe dessert place we went to?",
    options: ["Z", "X", "U", "F"],
    answer: 2,
  },
  {
    question: "What insect produces honey?",
    options: ["Bee", "Cocroach", "Butterfly", "Beetle"],
    answer: 0,
  },
  {
    question:
      "Which of the following is a weapon and can be potentially deadly?",
    options: ["Eri", "Baguette", "Green Onion", "Mine"],
    answer: 3,
  },
];

const choiceLabel = ["A.", "B.", "C.", "D."];

export default function Home() {
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [question, setQuestion] = useState<Question>(questions[0]!);
  const toast = useToast();

  useEffect(() => {
    if (currentQuestionIndex >= questions.length) {
      setQuestion(null);
    } else {
      setQuestion(questions[currentQuestionIndex]);
    }
  }, [currentQuestionIndex]);

  const celebrate = () => {
    toast({
      title: "Yay!",
      description: "You can open the gift now :)",
      status: "success",
      duration: 3000,
    });
  }

  return (
    <>
      <Head>
        <title>For Eri</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="min-w-screen flex min-h-screen flex-col items-center justify-center bg-[var(--bg-color)]">
          {/* Answer area */}
          <div className="flex flex-wrap justify-center">
            {questions.slice(0, currentQuestionIndex).map((question, i) => (
              <div
                className="mx-1 text-[var(--main-color)] text-2xl"
                key={`done-answer-${i}`}
              >
                {question.options[question.answer]}
              </div>
            ))}
            {questions.slice(currentQuestionIndex).map((question, i) => (
              <div
                className="mx-1 text-[var(--main-color)] text-2xl"
                key={`not-done-answer-${i}`}
              >
                {"_".repeat(question.options[question.answer]?.length ?? 5)}
              </div>
            ))}
            <span className="text-[var(--main-color)] text-2xl">?</span>
          </div>
          {/* Question area */}
          <div className="mt-12">
            {question && (
              <div className="m-5 rounded-lg bg-[--sub-alt-color] p-5 text-[var(--text-color)]">
                <p className="my-2">{question.question}</p>
                <ul>
                  {question.options.map((option, i) => (
                    <li
                      key={`option-${i}-${option}`}
                      className="my-1 cursor-pointer hover:text-[var(--main-color)]"
                      onClick={() => {
                        // move to next question if correct
                        if (i == question.answer) {
                          setCurrentQuestionIndex(currentQuestionIndex + 1);
                        } else {
                          // else show toast
                          toast({
                            title: "Dummy Eri",
                            status: "error",
                            duration: 1000,
                          });
                        }
                      }}
                    >
                      <span className="mr-3">{choiceLabel[i]}</span>
                      {option}
                    </li>
                  ))}
                </ul>
              </div>
            )}
            {!question && (
              <div className="flex gap-5">
                <Button colorScheme="blue" onClick={celebrate}>
                  Sure!
                </Button>
                <Button colorScheme="blue" onClick={celebrate}>
                  Of Course!
                </Button>
              </div>
            )}
          </div>
        </div>
      </main>
    </>
  );
}
